syntax = "proto3";
import "registers.proto";
import "pitch_controllers.proto";
import "yaw_controllers.proto";
import "physical_characteristics.proto";
import "motor_calibration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message Response {
    message Result {
        enum Code {
            OK = 0;
            ERR_UNKNOWN = 1;
        }
        Code code = 1;
        optional string msg = 2;
    }

    uint32 request_id = 1; // ID of the message being responded to
    Result result = 2;

    optional bool enable_balancing = 3;
    optional controllers.pitch.Params pitch_controller_params = 4;
    optional controllers.pitch.Type pitch_controller_active = 5;
    optional controllers.yaw.Params yaw_controller_params = 6;
    optional controllers.yaw.Type yaw_controller_active = 7;
    optional physical.Characteristics physical_characteristics = 8;
    optional motor_calib.LUT motor_calibration_lut = 9;
    optional motor_calib.Result motor_calibration_result = 10;
}

message RobotState {
    google.protobuf.Timestamp timestamp = 1; // Time that the state was recorded 
    float pitch = 2; // Pitch angle in radians
    float yaw = 3; // Yaw angle in radians
    float pitch_rate = 4; // Pitch rate in radians per second
    float yaw_rate = 5; // Yaw rate in radians per second
    float left_motor_angle = 6; // Left motor angle in radians
    float right_motor_angle = 7; // Right motor angle in radians
    float left_motor_speed = 8; // Left motor speed in rpm
    float right_motor_speed = 9; // Right motor speed in rpm
    controllers.pitch.State pitch_controller_state = 10;
    controllers.yaw.State yaw_controller_state = 11;
}

message Log {
    enum Level {
        DEBUG = 0;
        INFO = 1;
        WARN = 2;
        ERROR = 3;
    }

    Level level = 1;
    string message = 2;
}

// Global message template. All messages must be sent in this format.
message Message {
    uint32 id = 1; // Unique ID of the message
    oneof payload {
        Response response = 2;
        registers.ReadCurrent read_current_reg = 3;
        registers.ReadSaved read_saved_reg = 4;
        registers.WriteCurrent write_current_reg = 5;
        registers.SaveCurrent save_current_reg = 6;
        google.protobuf.Empty calibrate_motors = 7;
        RobotState robot_state = 8;
        Log log = 9;
        google.protobuf.Empty read_all_regs = 10;
    }
}